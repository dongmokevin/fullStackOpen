{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin_D\\\\Desktop\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Display = ({\n  text\n}) => {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nconst Statistics = props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, props.text, \" \", props.score);\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, props.text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = bad + neutral + good;\n  const average = (good + bad * -1) / all;\n  const percentage = good / all * 100;\n\n  const setToGood = () => setGood(good + 1);\n\n  const setToNeutral = () => setNeutral(neutral + 1);\n\n  const setToBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    text: \"give feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setToGood(),\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setToNeutral(),\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setToBad(),\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    text: \"statistics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"good\",\n    score: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"neutral\",\n    score: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"bad\",\n    score: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"all\",\n    score: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"average\",\n    score: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    text: \"percentage\",\n    score: percentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Kevin_D/Desktop/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Display","text","Statistics","props","score","Button","handleClick","App","good","setGood","neutral","setNeutral","bad","setBad","all","average","percentage","setToGood","setToNeutral","setToBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Display = ({text}) => {\n  return (\n    <h1>{text}</h1>\n  )\n}\n\nconst Statistics = (props) => (\n  <div>{props.text} {props.score}</div>\n)\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>{props.text}</button>\n)\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = bad + neutral + good;\n  const average = (good + (bad*-1)) / all;\n  const percentage = (good / all) * 100;\n\n  const setToGood = () => (\n    setGood(good + 1)\n  )\n\n  const setToNeutral = () => (\n    setNeutral(neutral + 1)\n  )\n\n  const setToBad = () => (\n    setBad(bad + 1)\n  )\n\n  return (\n    <div>\n      <Display text=\"give feedback\" />\n      <Button handleClick={() => setToGood()} text=\"good\" />\n      <Button handleClick={() => setToNeutral()} text=\"neutral\" />\n      <Button handleClick={() => setToBad()} text=\"bad\" />\n      <Display text=\"statistics\" />\n      <Statistics text=\"good\" score={good} />\n      <Statistics text=\"neutral\" score={neutral} />\n      <Statistics text=\"bad\" score={bad} />\n      <Statistics text=\"all\" score={all} />\n      <Statistics text=\"average\" score={average} />\n      <Statistics text=\"percentage\" score={percentage} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}